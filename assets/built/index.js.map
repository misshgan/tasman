{"version":3,"file":"index.js","sources":["../js/index.js"],"sourcesContent":["// JavaScript files are compiled and minified during the build process to the assets/built folder. See available scripts in the package.json file.\n\n// Import CSS\nimport \"../css/index.css\";\n\nfunction handleAccordion() {\n    const accordion = document.querySelector(\".js-accordion\");\n\n    if (!accordion) {\n        return;\n    }\n\n    const buttons = accordion.querySelectorAll(\".accordion__titles button\");\n    const paragraphs = accordion.querySelectorAll(\n        \".accordion__descriptions .paragraph\"\n    );\n\n    buttons.forEach((button, index) => {\n        button.addEventListener(\"click\", () => {\n            // Remove active class from all buttons and paragraphs\n            buttons.forEach((btn) => btn.classList.remove(\"active\"));\n            paragraphs.forEach((p) => p.classList.remove(\"active\"));\n\n            // Add active class to the clicked button and corresponding paragraph\n            button.classList.add(\"active\");\n            paragraphs[index].classList.add(\"active\");\n        });\n    });\n}\n\nhandleAccordion();\n\nfunction handleDynamicIconsSwitch() {\n    const section = document.querySelector(\".how-we-work\");\n    const cards = document.querySelectorAll(\".how-we-work__card\");\n    const icons = document.querySelectorAll(\".how-we-work__icon\");\n\n    if (!section || cards.length !== icons.length) {\n        return;\n    }\n\n    const setActiveIcon = () => {\n        const sectionRect = section.getBoundingClientRect();\n\n        // Before the section: Always show the first icon\n        if (sectionRect.top > 0) {\n            icons.forEach((icon, index) => {\n                icon.classList.toggle(\"active\", index === 0);\n            });\n            return;\n        }\n\n        // After the section: Always show the last icon\n        if (sectionRect.bottom <= window.innerHeight) {\n            icons.forEach((icon, index) => {\n                icon.classList.toggle(\"active\", index === icons.length - 1);\n            });\n            return;\n        }\n\n        // Inside the section: Activate the appropriate icon\n        let activeIndex = -1;\n\n        cards.forEach((card, index) => {\n            const rect = card.getBoundingClientRect();\n            if (\n                rect.top <= window.innerHeight / 2 &&\n                rect.bottom >= window.innerHeight / 2\n            ) {\n                activeIndex = index;\n            }\n        });\n\n        // Update active states for icons\n        icons.forEach((icon, index) => {\n            if (activeIndex !== -1) {\n                icon.classList.toggle(\"active\", index === activeIndex);\n            } else {\n                icon.classList.remove(\"active\");\n            }\n        });\n    };\n\n    // Attach scroll event\n    window.addEventListener(\"scroll\", setActiveIcon);\n\n    // Initialize on load\n    setActiveIcon();\n}\n\nhandleDynamicIconsSwitch();\n\n\nfunction handleLogoScroll() {\n    const track = document.querySelector(\".icon-track\");\n\n    if (!track) { return; }\n\n    const icons = Array.from(track.children);\n    icons.forEach((icon) => {\n        const clone = icon.cloneNode(true);\n        track.appendChild(clone);\n    });\n\n    let scrollPos = 0;\n\n    function animateIcons() {\n        scrollPos -= 0.75;\n        if (scrollPos <= -track.scrollWidth / 2) {\n            scrollPos = 0;\n        }\n        track.style.transform = `translateX(${scrollPos}px)`;\n        requestAnimationFrame(animateIcons);\n    }\n\n    animateIcons();\n}\n\nhandleLogoScroll();\n\nfunction handleFixedHeader() {\n    const header = document.querySelector('.js-fixed-header');\n\n    if (!header) { return; }\n\n    window.addEventListener('scroll', () => {\n        if (window.scrollY > 50) {\n            header.classList.add('moving')\n        } else {\n            header.classList.remove('moving')\n        }\n    })\n}\n\nhandleFixedHeader();"],"names":["accordion","document","querySelector","buttons","querySelectorAll","paragraphs","forEach","button","index","addEventListener","btn","classList","remove","p","add","handleAccordion","section","cards","icons","length","setActiveIcon","sectionRect","getBoundingClientRect","top","icon","toggle","bottom","window","innerHeight","activeIndex","card","rect","handleDynamicIconsSwitch","track","Array","from","children","clone","cloneNode","appendChild","scrollPos","animateIcons","scrollWidth","style","transform","requestAnimationFrame","handleLogoScroll","header","scrollY","handleFixedHeader"],"mappings":"+SAKA,WACI,MAAMA,EAAYC,SAASC,cAAc,iBAEzC,IAAKF,EACD,OAGJ,MAAMG,EAAUH,EAAUI,iBAAiB,6BACrCC,EAAaL,EAAUI,iBACzB,uCAGJD,EAAQG,SAAQ,CAACC,EAAQC,KACrBD,EAAOE,iBAAiB,SAAS,KAE7BN,EAAQG,SAASI,GAAQA,EAAIC,UAAUC,OAAO,YAC9CP,EAAWC,SAASO,GAAMA,EAAEF,UAAUC,OAAO,YAG7CL,EAAOI,UAAUG,IAAI,UACrBT,EAAWG,GAAOG,UAAUG,IAAI,SAAS,GAC3C,GAEV,CAEAC,GAEA,WACI,MAAMC,EAAUf,SAASC,cAAc,gBACjCe,EAAQhB,SAASG,iBAAiB,sBAClCc,EAAQjB,SAASG,iBAAiB,sBAExC,IAAKY,GAAWC,EAAME,SAAWD,EAAMC,OACnC,OAGJ,MAAMC,EAAgBA,KAClB,MAAMC,EAAcL,EAAQM,wBAG5B,GAAID,EAAYE,IAAM,EAIlB,YAHAL,EAAMZ,SAAQ,CAACkB,EAAMhB,KACjBgB,EAAKb,UAAUc,OAAO,SAAoB,IAAVjB,EAAY,IAMpD,GAAIa,EAAYK,QAAUC,OAAOC,YAI7B,YAHAV,EAAMZ,SAAQ,CAACkB,EAAMhB,KACjBgB,EAAKb,UAAUc,OAAO,SAAUjB,IAAUU,EAAMC,OAAS,EAAE,IAMnE,IAAIU,GAAe,EAEnBZ,EAAMX,SAAQ,CAACwB,EAAMtB,KACjB,MAAMuB,EAAOD,EAAKR,wBAEdS,EAAKR,KAAOI,OAAOC,YAAc,GACjCG,EAAKL,QAAUC,OAAOC,YAAc,IAEpCC,EAAcrB,EAClB,IAIJU,EAAMZ,SAAQ,CAACkB,EAAMhB,MACI,IAAjBqB,EACAL,EAAKb,UAAUc,OAAO,SAAUjB,IAAUqB,GAE1CL,EAAKb,UAAUC,OAAO,SAC1B,GACF,EAINe,OAAOlB,iBAAiB,SAAUW,GAGlCA,GACJ,CAEAY,GAGA,WACI,MAAMC,EAAQhC,SAASC,cAAc,eAErC,IAAK+B,EAAS,OAEAC,MAAMC,KAAKF,EAAMG,UACzB9B,SAASkB,IACX,MAAMa,EAAQb,EAAKc,WAAU,GAC7BL,EAAMM,YAAYF,EAAM,IAG5B,IAAIG,EAAY,GAEhB,SAASC,IACLD,GAAa,IACTA,IAAcP,EAAMS,YAAc,IAClCF,EAAY,GAEhBP,EAAMU,MAAMC,UAAa,cAAaJ,OACtCK,sBAAsBJ,EAC1B,CAEAA,EACJ,CAEAK,GAEA,WACI,MAAMC,EAAS9C,SAASC,cAAc,oBAEjC6C,GAELpB,OAAOlB,iBAAiB,UAAU,KAC1BkB,OAAOqB,QAAU,GACjBD,EAAOpC,UAAUG,IAAI,UAErBiC,EAAOpC,UAAUC,OAAO,SAC5B,GAER,CAEAqC"}